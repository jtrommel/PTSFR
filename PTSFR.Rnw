\documentclass{tufte-book}
\usepackage{graphicx}  % werken met figuren
\usepackage{gensymb} % werken met wetenschappelijke eenheden\usepackage{geometry}
\usepackage{changepage} % http://ctan.org/pkg/changepage
\usepackage[dutch,british]{babel} % instelling van de taal (woordsplitsing, spellingscontrole)
\usepackage[parfill]{parskip} % Paragrafen gescheiden door witte lijn en geen inspringing
\usepackage[font=small,skip=3pt]{caption} % Minder ruimte tussen figuur/table en ondertitel. Ondertitel klein
\usepackage{capt-of}
\usepackage{indentfirst}
\setlength{\parindent}{0.7cm}
\usepackage{enumitem} % Laat enumerate werken met letters
\usepackage{url}
\usepackage{lipsum}
\setkeys{Gin}{width=\linewidth,totalheight=\textheight,keepaspectratio}
% Prints a trailing space in a smart way.
\usepackage{xspace}
\usepackage{hyperref}
\usepackage{amsmath}

\DeclareGraphicsExtensions{.pdf,.png,.jpg}

% Alter some LaTeX defaults for better treatment of figures:
% See p.105 of "TeX Unbound" for suggested values.
% See pp. 199-200 of Lamport's "LaTeX" book for details.
%   General parameters, for ALL pages:
    \renewcommand{\topfraction}{0.9}	% max fraction of floats at top
    \renewcommand{\bottomfraction}{0.9}	% max fraction of floats at bottom
%   Parameters for TEXT pages (not float pages):
    \setcounter{topnumber}{2}
    \setcounter{bottomnumber}{2}
    \setcounter{totalnumber}{4}     % 2 may work better
    \renewcommand{\textfraction}{0.1}	% allow minimal text w. figs
%   Parameters for FLOAT pages (not text pages):
    \renewcommand{\floatpagefraction}{0.8}	% require fuller float pages
% N.B.: floatpagefraction MUST be less than topfraction !!
\setcounter{secnumdepth}{3}

\newcommand{\tthdump}[1]{#1}

\newcommand{\openepigraph}[2]{
  \begin{fullwidth}
  \sffamily\large
    \begin{doublespace}
      \noindent\allcaps{#1}\\ % epigraph
      \noindent\allcaps{#2} % author
    \end{doublespace}
  \end{fullwidth}
}


\usepackage{makeidx}
\makeindex

\title{Practical Time Series Forecasting with R}
\author{Jan Trommelmans}

\begin{document}
\SweaveOpts{concordance=TRUE,prefix.string=PTSFR}
\setkeys{Gin}{width=1.1\marginparwidth} %% Sweave

<<echo=FALSE>>=
library(tidyverse)
library(broom)
library(gridExtra)
@

% Setting the ggplot theme:
<<echo=FALSE>>=
JT.theme <- theme(panel.border = element_rect(fill = NA, colour = "gray10"),
                  panel.background = element_blank(),
                  panel.grid.major = element_line(colour = "gray85"),
                  panel.grid.minor = element_line(colour = "gray85"),
                  panel.grid.major.x = element_line(colour = "gray85"),
                  axis.text = element_text(size = 8 , face = "bold"),
                  axis.title = element_text(size = 9 , face = "bold"),
                  plot.title = element_text(size = 12 , face = "bold"),
                  strip.text = element_text(size = 8 , face = "bold"),
                  strip.background = element_rect(colour = "black"),
                  legend.text = element_text(size = 8),
                  legend.title = element_text(size = 9 , face = "bold"),
                  legend.background = element_rect(fill = "white"),
                  legend.key = element_rect(fill = "white"))
@

% Functions



\frontmatter
\chapter*{Practical Time Series Forecasting with R}

\mainmatter

\chapter{Constructing different data sets}

\section{Characteristics of time series}
Time series can have the following characteristics:

\begin{enumerate}
  \item error: random fluctuation of values
  \item level: mean value of the series
  \item trend: gradual evolution without repetition
  \item seasonality: periodic behaviour with characteristic period $T_{i}$. Multiple periodicity is possible
\end{enumerate}

The use of \emph{level} and \emph{trend} as separate characteristics is different from normal usage in model building where both are incorporated into the model equation. Thus if we model the general behaviour of $y$ as a function of $x$ by a polynomial:
\begin{equation}
y(x)=b_{0} + b_{1}x + b_{2}x^{2} + \ldots b_{i}x^{i} + \ldots = p(x)
\end{equation}

and we define the level as $\bar{y}$ then the \emph{trend} in the sense of time series is given by:
\begin{equation}
trend = p(x) - \bar{y} = \left( b_{0} - \bar{y} \right) + b_{1}x + b_{2}x^{2} + \ldots b_{i}x^{i} + \ldots 
\end{equation}

The book\sidenote{Practical Time Series Forecasting with R - Galit Shmueli and Kenneth C. Lichtendahl Jr.} uses a number of real life data sets. I add a number of data sets that exhibit one or more of the classic time series characteristics. 

A time series can be constructed by \emph{adding} or \emph{multiplying} or \emph{combinations of adding and multiplying} these basic characteristics. \emph{Multiplication} is used when e.g. the amplitude of an seasonal characteristic is linked to the trend. Multiplying a trend with a sine function (seasonality) will increase the amplitude of the sine function when the trend is rising, and decrease the amplitude when the trend is falling. The same can be said for multiplying the trend and the error term: bigger errors when the trend rises, smaller when it falls.

This gives a lot of possible combinations. If we limit ourselves to a maximum of two seasonal elements, and either a completely additive or a completely multiplicative type we get $2^6 = 64$ combinations:

\begin{tabular}{r | c | c}
characteristic & 0 = not present & 1 = present \\
\hline
error & 0 & 1 \\
level & 0 & 1 \\
trend & 0 & 1 \\
seasonality 1 & 0 & 1 \\
seasonality 2 & 0 & 1 \\
type & A & M
\end{tabular}

However, some of these 64 possibilities are not interesting or self evident:
\begin{itemize}
  \item all multiplicative constructed time series where one of the characteristics is 0, have the same end result i.e. zero everywhere
  \item some models without an error term. Where we have only level (no trend, no seasonality) the graph is a horizontal line. Forecasting is easy: just continue the line. Where we have level + trend the graph is a straight line and again forecasting is simply extending the line
\end{itemize}

The interesting ones are:
\begin{enumerate}
  \item additively created time series:
    \begin{itemize}
      \item without error
        \begin{itemize}
          \item level + trend + seasonality 1
          \item level + trend + seasonality 1 + seasonality 2
        \end{itemize}
      \item with error
        \begin{itemize}
          \item error + level
          \item error + level + trend
          \item error + level + trend + seasonality 1
          \item error + level + trend + seasonality 1 + seasonality 2
        \end{itemize}
      \end{itemize}
  \item multiplicatively created time series:
    \begin{itemize}
      \item without error
        \begin{itemize}
          \item level*trend
          \item level*trend*seasonality 1
          \item level*trend*seasonality 1*seasonality 2
        \end{itemize}
      \item with error
        \begin{itemize}
          \item error*level
          \item error*level*trend
          \item error*level*trend*seasonality 1
          \item error*level*trend*seasonality 1*seasonality 2
        \end{itemize}
    \end{itemize}
\end{enumerate}

\section{Constructed data sets}

\begin{itemize}
  \item number of elements per time series: N=1000
  \item time step unit: 1
  \item error: random from normal distributiion with $\mu=0$, $\sigma=3$. Random number generator seed: 2019
  \item trend: polynomial. We restrict ourselves to models $y=p(x)$ with second degree polynomials (or first degree when $b_{2}=0$) with co\"{e}ffici\"{e}nts $b_{0}=0$, $b_{1}=0.01$ and $b_{2}=0.00005$. From this model it follows that
    \begin{equation}
      level = \bar{y} = \frac{1}{N}\int_{t=1}^{t=N}p(t)dt = \frac{1}{N} \left[ b_{0}(N-1) + \frac{b_{1}}{2}(N^{2}-1) + \frac{b_{2}}{3}(N^{3} - 1)  \right]
    \end{equation}
    \begin{equation}
      trend = p(t) - level
    \end{equation}
  \item seasonality 1: sine with amplitude=0 or $3\sigma$, period=$\frac{N}{9}$, phase=0. N not exact multiple of T1
  \item seasonality 2: sine with amplitude=0 or $\sigma$, period=$\frac{N}{39}$, phase=$\frac{\pi}{3}$. N not exaxt multiple of T2
  \item type: additive (''A") or multiplicative (''M")
\end{itemize}


<<echo=FALSE>>=
# Number of elements in the data set
N <- 1000
# Random number generator seed
set.seed(2019)
# error parameters
mu <- 0
sigma <- 3
# model parameters
b0 <- 0
b1 <- 0.01
b2 <- 0.00005
# level (when not zero)
level <- (1/N)*(b0*(N-1) + (b1/2)*(N^2 -1) + (b2/3)*(N^3 -1))
# trend
# seasonality 1
amp1 <- 3*sigma
teta1 <- 0
T1 <- N/9
# seasonality 2
amp2 <- sigma
teta2 <- pi/3
T2 <- N/39
@

\subsection{Additive constructed time series}
<<echo=FALSE>>=
#
# creating the additive constructed set
#
construct <- data.frame(t = seq(1:N),
                        error = rnorm(N, mean = mu, sd = sigma),
                        level = rep(level, N))
construct %>% mutate(trend = (b0 + b1*t +b2*t^2) - level) -> construct
construct %>% mutate(season1 = amp1*sin(2*pi*t/T1 + teta1)) -> construct
construct %>% mutate(season2 = amp2*sin(2*pi*t/T2 + teta2)) -> construct
@

<<label=additive, fig=TRUE, include=FALSE, echo=FALSE>>=
p1 <- ggplot(data = construct, aes(x = t)) +
  geom_line(aes(y = error), size = 1, color="red") +
  geom_hline(yintercept = mu, linetype = 2) +
  scale_y_continuous(limits= c(-25, 75)) +
  JT.theme
p2 <- ggplot(data = construct, aes(x = t)) +
  geom_line(aes(y = error + level), size = 1, color="red") +
  geom_hline(yintercept = level, linetype = 2) +
  scale_y_continuous(limits= c(-25, 75)) +
  JT.theme
p3 <- ggplot(data = construct, aes(x = t)) +
  geom_line(aes(y = error + level + trend), size = 1, color="red") +
  geom_hline(yintercept = level, linetype = 2) +
  scale_y_continuous(limits= c(-25, 75)) +
  JT.theme
p4 <- ggplot(data = construct, aes(x = t)) +
  geom_line(aes(y = error + level + trend + season1 + season2), size = 1, color="red") +
  geom_hline(yintercept = level, linetype = 2) +
  scale_y_continuous(limits= c(-25, 75)) +
  JT.theme
grid.arrange(p1, p2, p3, p4, nrow=2)
@

\begin{figure}
\includegraphics[width=0.85\textwidth]{PTSFR-additive}
\caption{Additive constructed time series}
\label{fig:additive}
\setfloatalignment{b}
\end{figure}

\subsection{Multiplicative constructed time series}

I'm still stumped by the ease with which multiplicative time series are defined. I find
\begin{equation}
y(t)=error(t)*level(t)*trend(t)*seasonality(t)
\end{equation}

But this multiplication means that $y(t)$ will always be equal to zero whenever one of the factors is zero. 

<<label=level, fig=TRUE, include=FALSE, echo=FALSE>>=
p1 <- ggplot(data = construct, aes(x = t)) +
  geom_line(aes(y = level*trend), size=1, color="red") +
  labs(title="") +
  JT.theme
p2 <- ggplot(data = construct, aes(x = t)) +
  geom_line(aes(y = level*season1), size=1, color="red") +
  labs(title="") +
  JT.theme
grid.arrange(p1, p2, nrow=1)
@

<<label=trend, fig=TRUE, include=FALSE, echo=FALSE>>=
p1 <- ggplot(data = construct, aes(x = t)) +
  geom_line(aes(y = trend*season1), size=1, color="red") +
  labs(title="") +
  JT.theme
p2 <- ggplot(data = construct, aes(x = t)) +
  geom_line(aes(y = (level+trend)*season1), size=1, color="red") +
  labs(title="") +
  JT.theme
grid.arrange(p1, p2, nrow=1)
@

<<label=season, fig=TRUE, include=FALSE, echo=FALSE>>=
p1 <- ggplot(data = construct, aes(x = t)) +
  geom_line(aes(y = (level+trend)*(1+season1)), size=1, color="red") +
  labs(title="") +
  JT.theme
p2 <- ggplot(data = construct, aes(x = t)) +
  geom_line(aes(y = (level+trend)*(1+0.05*season1)), size=1, color="red") +
  labs(title="") +
  JT.theme
grid.arrange(p1, p2, nrow=1)
@

\begin{itemize}
  \item level*trend or level*season simply multiplies all the trend co\"{e}ffici\"{e}nts by level or the season's amplitude. The general picture remains the same (Figure~\ref{fig:level}).
    \begin{marginfigure}[-2cm]
      \includegraphics[width=1\textwidth]{PTSFR-level}
      \caption{}
      \label{fig:level}
      \setfloatalignment{b}
    \end{marginfigure}
  \item trend*season1: because of the introduction of level, the trend will be about zero around $t=\frac{N}{2}$. Before that the trend will be negative and getting more negative, after that point the trend will be positive and getting more positive. This means the amplitude of the seasonality will get bigger to the left and to the right, with a phase-shift around $t=\frac{N}{2}$ (Figure~\ref{fig:trend})
  \item (level+trend)*season: this changes the amplitude of the seasonal component but it loses the overall level and trend (Figure~\ref{fig:trend})
    \begin{marginfigure}[0cm]
      \includegraphics[width=1\textwidth]{PTSFR-trend}
      \caption{}
      \label{fig:trend}
      \setfloatalignment{b}
    \end{marginfigure}
  \item (level+trend)*(1+season) (Figure~\ref{fig:season})
  \item (level+trend)*(1+0.05*season) (Figure~\ref{fig:season})
  \begin{marginfigure}[0cm]
      \includegraphics[width=1\textwidth]{PTSFR-season}
      \caption{}
      \label{fig:season}
      \setfloatalignment{b}
    \end{marginfigure}
\end{itemize}


<<echo=FALSE>>=
#
# creating the multiplicative constructed set
#
multiplicative <- data.frame(t = seq(1:N),
                        error = rnorm(N, mean = mu, sd = sigma),
                        level = rep(level, N))
multiplicative %>% mutate(trend = (b0 + b1*t +b2*t^2) - level) -> multiplicative
multiplicative %>% mutate(season1 = amp1*sin(2*pi*t/T1 + teta1)) -> multiplicative
multiplicative %>% mutate(season2 = amp2*sin(2*pi*t/T2 + teta2)) -> multiplicative
@

<<label=multiplicative, fig=TRUE, include=FALSE, echo=FALSE>>=
p1 <- ggplot(data = multiplicative, aes(x = t)) +
  geom_line(aes(y = error), size = 1, color="red") +
  geom_hline(yintercept = mu, linetype = 2) +
  scale_y_continuous(limits= c(-25, 175)) +
  JT.theme
p2 <- ggplot(data = multiplicative, aes(x = t)) +
  geom_line(aes(y = error*level), size = 1, color="red") +
  geom_hline(yintercept = level, linetype = 2) +
  scale_y_continuous(limits= c(-25, 175)) +
  JT.theme
p3 <- ggplot(data = multiplicative, aes(x = t)) +
  geom_line(aes(y = error*level*trend), size = 1, color="red") +
  geom_hline(yintercept = level, linetype = 2) +
  scale_y_continuous(limits= c(-25, 175)) +
  JT.theme
p4 <- ggplot(data = multiplicative, aes(x = t)) +
  geom_line(aes(y = error*level*trend*season1*season2), size = 1, color="red") +
  geom_hline(yintercept = level, linetype = 2) +
  scale_y_continuous(limits= c(-25, 175)) +
  JT.theme
grid.arrange(p1, p2, p3, p4, nrow=2)
@

\begin{figure}
\includegraphics[width=0.85\textwidth]{PTSFR-multiplicative}
\caption{multiplicative constructed time series}
\label{fig:multiplicative}
\setfloatalignment{b}
\end{figure}

\chapter{Approaching Forecasting}
\section{Forecasting: Where?}

\subsection{The data}

<<label=Amdata,fig=TRUE,include=FALSE, echo=FALSE>>=
Amtrak.data <- read.csv("Data/Amtrak data.csv", sep=";")
Amtrak.data$nr <- c(1:nrow(Amtrak.data))
ggplot(data=Amtrak.data) +
  geom_line(aes(x=nr, y=Ridership), size=1, color="red") +
  labs(title="Amtrak Ridership data") +
  JT.theme
@

\begin{figure}
\includegraphics[width=1\textwidth]{PTSFR-Amdata}
\caption{}
\label{fig:Amdata}
\setfloatalignment{b}
\end{figure}


\newpage
\textbf{Thanks} \\
\medskip
R Core Team (2018). R: A language and environment for statistical computing. R Foundation for Statistical Computing, Vienna, Austria. URL https://www.R-project.org/.
\medskip
<<>>=
sessionInfo()
@

\end{document}